<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--详细配置参考http://mybatis.org/generator/configreference/table.html-->
<generatorConfiguration>
    <!-- 使用已有的配置文件 -->
    <properties resource="jdbc.properties"/>
    <!-- 数据库驱动 -->
    <!--    <classPathEntry location="mysql:mysql-connector-java-8.0.29.jar"/>-->
    <context id="DB2Tables" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 实现序列化 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!-- 添加@Mapper注解-->
        <plugin type="org.mybatis.generator.plugins.MapperAnnotationPlugin"/>
        <!--添加lombok注解-->
        <plugin type="cn.crabapples.LombokPlugin">
            <property name="annotation" value="Getter,Setter,Data,ToString,"/>
        </plugin>
        <!--使用fastJson重写toString()方法-->
        <plugin type="cn.crabapples.FastJsonToStringPlugin"/>
        <commentGenerator>
            <!--是否生成注释 true:否 false:是(默认)-->
            <!--当设置为true时，则忽略以下所有配置-->
            <property name="suppressAllComments" value="true"/>
            <!--是否添加日期 true:否 false:是(默认)-->
            <property name="suppressDate" value="false"/>
            <!--生成日期格式-->
            <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss E"/>
            <!--是否添加数据库注释-->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接 -->
        <!-- jdbcConnection和connectionFactory二选一即可，不可同时配置 -->
        <!--        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}"-->
        <!--                        userId="${jdbc.username}" password="${jdbc.password}">-->
        <!--        </jdbcConnection>-->
        <connectionFactory>
            <property name="driverClass" value="${jdbc.driver}"/>
            <property name="connectionURL" value="${jdbc.url}"/>
            <property name="userId" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="nullCatalogMeansCurrent" value="true"/>
        </connectionFactory>

        <!-- 非必须，类型处理器，在数据库类型和java类型之间的转换控制 -->
        <javaTypeResolver>
            <!-- 当该属性为 false 或未指定时，默认的 Java 类型解析器将尝试通过替换 Integral 类型-->
            <!-- 来使 JDBC DECIMAL 和 NUMERIC 类型更易于使用。替换规则如下：-->
            <!-- 如果小数位数大于零，或者长度大于 18，则将使用 java.math.BigDecimal 类型-->
            <!-- 如果小数位数为零，长度为 10 到 18，则 Java 类型解析器将替换为 java.lang.Long。-->
            <!-- 如果小数位数为零，长度为 5 到 9，则 Java 类型解析器将替换为 java.lang.Integer。-->
            <!-- 如果小数位数为零，而长度小于 5，则 Java 类型解析器将替换为 java.lang.Short。-->
            <property name="forceBigDecimals" value="true"/>
            <!-- 是否应强制对 DATE、TIME 和 TIMESTAMP 字段使用 JSR-310 数据类型-->
            <!-- DATE java.time.LocalDate-->
            <!-- TIME java.time.LocalTime-->
            <!-- TIMESTAMP java.time.LocalDateTime-->
            <!-- 默认是使用java.util.Date-->
            <property name="useJSR310Types" value="false"/>

        </javaTypeResolver>

        <!-- 生成entity对象的包名和位置-->
        <javaModelGenerator targetPackage="cn.crabapples.custom.entity" targetProject="./src/main/java">
            <!--是否生成构造函数-->
            <property name="constructorBased" value="false"/>
            <!--是否根据类名自动生成子包-->
            <property name="enableSubPackages" value="true"/>
            <!--示例对象包路径。如果未指定，示例对象将与其他模型对象在同一个包中生成-->
            <property name="exampleTargetPackage" value="cn.crabapples.custom.entity"/>
            <!--示例对象项目路径。如果未指定，示例对象将与其他模型对象在同一个项目中生成-->
            <property name="exampleTargetProject" value="./src/main/java"/>
            <!--是否是不可变的，如果为true，则不会生成setter方法，这个属性可以被<table>里的配置覆盖-->
            <!--            <property name="immutable" value="false"/>-->
            <!--需要继承的类-->
            <property name="rootClass" value="cn.crabapples.common.base.BaseEntity"/>
            <!--是否修剪字符串，当数据库类型为char而不是varchar时，可自动修剪字符串-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成mapper xml文件的包名和位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="./src/main/resources">
            <!--是否根据类名自动生成子包-->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置-->
        <!--注解模式：type为ANNOTATEDMAPPER时，全部使用注解，需要MyBatis 3.0.4 及以上-->
        <!--混合模式：type为MIXEDMAPPER时，简单查询使用注解，复杂查询使用xml，不会生成Sql Provider 需要MyBatis 3.0.4 及以上-->
        <!--XML模式：type为XMLMAPPER时，全部使用XML， 需要MyBatis 3.0.4 及以上-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="cn.crabapples.custom.dao.mybatis"
                             targetProject="./src/main/java">
            <!--是否根据类名自动生成子包-->
            <property name="enableSubPackages" value="true"/>
            <!--需要继承的接口-->
            <property name="rootInterface" value=""/>
        </javaClientGenerator>

        <!-- 要生成的表tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <table tableName="sys_user" domainObjectName="SysUser"
               enableInsert="true"
               enableSelectByExample="true"
               enableDeleteByExample="false"
               enableCountByExample="false"
               enableUpdateByExample="false"
               selectByExampleQueryId="false">
            <!--是否使用字段名作为生成的属性名-->
            <!--如果为false则会将下划线转为驼峰-->
            <property name="useActualColumnNames" value="false"/>
            <!-- 数据库表主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            <!--配置需要特殊处理的字段-->
            <!--            <columnOverride column="del_flag" property="delFlag" jdbcType="VARCHAR" javaType="Integer"/>-->
            <!--            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>-->

            <!--配置被忽略的字段-->
            <ignoreColumn column="del_flag"/>
            <ignoreColumn column="create_by"/>
            <ignoreColumn column="create_time"/>
            <ignoreColumn column="update_time"/>
        </table>
    </context>
</generatorConfiguration>
